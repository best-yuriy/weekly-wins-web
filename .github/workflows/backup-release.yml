name: Release and Deploy
on:
  # push:
  #   tags:
  #     - 'v*.*.*'
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create GitHub release?'
        required: true
        type: boolean
        default: false

jobs:
  create-release:
    if: github.event_name == 'push' || inputs.create_release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          prerelease: ${{ contains(github.ref_name, '-') }}

  deploy:
    needs: [create-release]
    if: |
      (github.event_name == 'push' && success()) ||
      (github.event_name == 'workflow_dispatch' && inputs.create_release && success()) ||
      (github.event_name == 'workflow_dispatch' && !inputs.create_release)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - run: |
          npm ci && \
            npm run build --if-present && \
            npm run test:ci

      - name: Deploy Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_WEEKLYWINSNOW }}
          channelId: live
          projectId: weeklywinsnow

      - name: Deploy Firestore Rules
        run: firebase deploy --only firestore:rules --project weeklywinsnow --token "${{ secrets.FIREBASE_SERVICE_ACCOUNT_WEEKLYWINSNOW }}"
